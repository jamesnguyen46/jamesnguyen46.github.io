name: Generate static website

on:
  # Trigger manual
  workflow_dispatch:
  push:
    tags:
      - v*.*.*

jobs:
  generate-static-web:
    runs-on: ubuntu-latest
    environment: github-pages
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GHA_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-root --no-dev
      - name: Build static website
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        run: |
          source .venv/bin/activate
          python manage.py migrate
          make
      - name: Git preparation
        run: |
          git config --global user.name github-actions
          git config --global user.email '$GITHUB_ACTOR@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GHA_TOKEN }}@github.com/$GITHUB_REPOSITORY
      - name: Generate commit message for PUSH event
        if: github.event_name == 'push'
        run: |
          echo "COMMIT_MSG=\"[Auto] (${GITHUB_REF#refs/*/}) Deploy page\"" >> $GITHUB_ENV
      - name: Generate commit message for DISPATCH event
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "COMMIT_MSG=\"[Manual] Deploy content\"" >> $GITHUB_ENV
      - name: Commit to release/gh_pages
        run: |
          git add static/ docs/
          git stash
          git fetch --all
          git checkout -b release/gh_pages --track origin/release/gh_pages
          git checkout stash -- static/ docs/
          git commit -m ${{ env.COMMIT_MSG }}
          git push --force
